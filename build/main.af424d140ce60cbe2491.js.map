{"version":3,"sources":["webpack:///./js/fetchCountries.js","webpack:///./js/input.js","webpack:///./index.js"],"names":["fetchCountries","searchQuery","fetch","then","response","json","data","length","error","text","refs","countiresContainer","insertAdjacentHTML","map","el","name","join","countryBox","flag","capital","population","languages","catch","console","log","handleInput","e","preventDefault","target","value","innerHTML","debounce","require","inputBtn","document","querySelector","addEventListener"],"mappings":"mJAqCeA,MAlCf,SAAwBC,GAIpB,OAAOC,MAFM,yCAAwCD,GAGjDE,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IAECA,EAAKC,OAAS,GAChBC,gBAAM,CACFC,KAAM,+DAIHH,EAAKC,OAAS,GAAKD,EAAKC,OAAS,GACrCG,EAAKC,mBAAmBC,mBAAmB,YAAaN,EAAKO,IAAKC,GAAQ,OAAMA,EAAGC,aAAaC,KAAK,KAIxGN,EAAKO,WAAWL,mBAAmB,YAAaN,EAAKO,IAAKC,GAAQ,4DAE5DA,EAAGC,oCACGD,EAAGI,iFACWJ,EAAGK,uDACAL,EAAGM,0DACHN,EAAGO,UAAUR,IAAKC,GAAQ,OAAMA,EAAGC,aAAaC,KAAK,mCAMtFM,MAAMd,GAASe,QAAQC,IAAIhB,KCnBpBiB,MAZf,SAAqBC,GAClBA,EAAEC,iBACF,IAAI1B,EAAcyB,EAAEE,OAAOC,MAE3B,OAIAnB,EAAKC,mBAAmBmB,UAAY,GACpCpB,EAAKO,WAAWa,UAAY,GALrB9B,EAAeC,ICNrB8B,G,UAAWC,EAAQ,SAMvB,MAAMtB,EAAO,CACTuB,SAAUC,SAASC,cAAc,eACjCxB,mBAAoBuB,SAASC,cAAc,sBAC3ClB,WAAYiB,SAASC,cAAc,YAGvCzB,EAAKuB,SAASG,iBAAiB,QAASL,EAASN,EAAa,MAG/Cf,oB","file":"main.af424d140ce60cbe2491.js","sourcesContent":["import { error } from '@pnotify/core';\nimport refs from '../index.js';\n\nfunction fetchCountries(searchQuery){\n\n    const url = `https://restcountries.eu/rest/v2/name/${searchQuery}`;\n\n    return fetch(url) \n       .then(response => response.json()) \n       .then(data => { \n\n           if(data.length > 10){\n            error({\n                text: \"Too many matches found.Please enter a more specific query!\"\n              }); \n           } \n           \n           else if(data.length > 2 && data.length < 10){\n               refs.countiresContainer.insertAdjacentHTML('beforeEnd', data.map((el) => `<li>${el.name}</li>`).join(''))\n           }\n\n           else {\n            refs.countryBox.insertAdjacentHTML('beforeEnd', data.map((el) => `\n            <div class=\"country-box\">\n            <h1>${el.name}</h1>\n            <img src=\"${el.flag}\" width=\"500px\" margin-bottom=\"5px\">\n            <p><span>Capital:</span>${el.capital}</p>\n            <p><span>Population:</span>${el.population}</p>\n            <ul><span>Languages:</span>${el.languages.map((el) => `<li>${el.name}</li>`).join('')}</ul>\n            </div>`))\n           }\n           \n        })\n\n       .catch(error => console.log(error))\n}\n\nexport default fetchCountries;","import fetchCountries from './fetchCountries';\nimport refs from '../index.js';\n\nfunction handleInput(e){\n   e.preventDefault();\n   let searchQuery = e.target.value;\n   clearHTML();\n   return fetchCountries(searchQuery)\n}\n\nfunction clearHTML(){\n   refs.countiresContainer.innerHTML = '';\n   refs.countryBox.innerHTML = '';\n}\n\nexport default handleInput;\n\n","import './css/styles.css';\nvar debounce = require('lodash.debounce');\nimport handleInput from './js/input';\nimport '@pnotify/core/dist/BrightTheme.css';\n\n\n\nconst refs = {\n    inputBtn: document.querySelector('.input-form'),\n    countiresContainer: document.querySelector('.countires-gallery'),\n    countryBox: document.querySelector('.coutry'),\n}\n\nrefs.inputBtn.addEventListener('input', debounce(handleInput, 500))\n\n\nexport default refs;"],"sourceRoot":""}